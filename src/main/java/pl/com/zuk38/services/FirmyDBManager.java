package pl.com.zuk38.services;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import com.pl.zuk38.movenbaza.Firmy;



public class FirmyDBManager {


		private Connection conn;

		private Statement stmt;

		private PreparedStatement addFirmyStmt;
		private PreparedStatement getFirmyStmt;


		public FirmyDBManager()
		{
			try {

				conn= DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/workdb");

				stmt=conn.createStatement();
				boolean firmyTableExists=false;

				ResultSet rs= conn.getMetaData().getTables(null, null, null, null);

				while(rs.next())
				{
					if("Firmy".equalsIgnoreCase(rs.getString("TABLE_NAME")))
						{
							firmyTableExists=true;
							break;
						}
				}


				if(!firmyTableExists)
				{
					stmt.executeUpdate("" +
						"CREATE TABLE firmy(" +
						"id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY," +
						"name varchar(30)," +
						"" +
						")");
				}

				addFirmyStmt=conn.prepareStatement("" +
						"INSERT INTO firmy (name) VALUES (?)" +
						"");

				getFirmyStmt=conn.prepareStatement("" +
						"SELECT * FROM firmy" +
						"");



			} catch (SQLException e) {

				e.printStackTrace();
			}
		}

		public void addFirmy(Firmy p)
		{
			try {
				addFirmyStmt.setString(1, p.getNazwaF());

				addFirmyStmt.executeUpdate();

			} catch (SQLException e) {

				e.printStackTrace();
			}

		}
		

		public List<Firmy> getAllFirmy()
		{
			List<Firmy> firmy=new ArrayList<Firmy>();

			try {
				ResultSet rs= getFirmyStmt.executeQuery();

				while(rs.next())
				{
					firmy.add(new Firmy(rs.getString("name"), null));
				}

			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			return firmy;
		}

	}

